#! /bin/sh

### BEGIN INIT INFO
# Provides:		kafka
# Required-Start:	$remote_fs $syslog
# Required-Stop:	$remote_fs $syslog
# Default-Start:	2 3 4 5
# Default-Stop:		
# Short-Description:	Kafka daemon
### END INIT INFO

set -e

# /etc/init.d/zookeeper: start and stop the Zookeeper daemon

. /lib/lsb/init-functions

# Are we running from init?
run_by_init() {
    ([ "$previous" ] && [ "$runlevel" ]) || [ "$runlevel" = S ]
}

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

case "$1" in
  start)
	log_daemon_msg "Starting Zookeeper" "zookeeper" || true
	if start-stop-daemon --start --quiet --oknodo --pidfile {{ ansible_env.HOME }}/zookeeper-3.4.6/zookeeper.pid --exec  {{ ansible_env.HOME }}/zookeeper-3.4.6/bin/zkServer.sh start -- ; then
	    log_end_msg 0 || true
	else
	    log_end_msg 1 || true
	fi
	;;
  stop)
	log_daemon_msg "Stopping Zookeeper" "zookeeper" || true
  {{ ansible_env.HOME }}/zookeeper-3.4.6/bin/zkServer.sh stop
	if start-stop-daemon --stop --quiet --oknodo --pidfile {{ ansible_env.HOME }}/zookeeper-3.4.6/zookeeper.pid -- ; then
	    log_end_msg 0 || true
	else
	    log_end_msg 1 || true
	fi
	;;

  restart)
	log_daemon_msg "Restarting Zookeeper" "zookeeper" || true
	start-stop-daemon --stop --quiet --oknodo --retry 30 --pidfile {{ ansible_env.HOME }}/zookeeper-3.4.6/zookeeper.pid
	if start-stop-daemon --start --quiet --oknodo --pidfile {{ ansible_env.HOME }}/zookeeper-3.4.6/zookeeper.pid --exec  {{ ansible_env.HOME }}/zookeeper-3.4.6/bin/zkServer.sh restart ; then
	    log_end_msg 0 || true
	else
	    log_end_msg 1 || true
	fi
	;;

  status)
	{{ ansible_env.HOME }}/zookeeper-3.4.6/bin/zkServer.sh status && exit 0 || exit $?
	;;

  *)
	log_action_msg "Usage: /etc/init.d/ssh {start|stop|restart|status}" || true
	exit 1
esac

exit 0

