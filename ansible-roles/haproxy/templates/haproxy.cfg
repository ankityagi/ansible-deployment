global
    log 127.0.0.1 local0 notice
    maxconn {{ haproxy_maxconn_global }}
    user haproxy
    group haproxy
                
defaults
    log global
    mode http
    option httplog
    option dontlognull
    retries 3
    option redispatch
    timeout connect {{ haproxy_timeout_connect }}
    timeout client {{ haproxy_timeout_client }}
    timeout server {{ haproxy_timeout_server }}
    # maximum time for a request to be left pending in a queue
    timeout queue {{ haproxy_timeout_queue }}

frontend frontend
    bind *:80
    mode http

    # re-direct to specific backend based on request  
    #acl url_lda path_beg /api/lda
    #use_backend lda if url_lda

    # fallback backend  
    default_backend workers
        
backend workers
    mode http
    # algorithms: roundrobin, leastconn
    balance {{ haproxy_algorithm }}
    option httpclose 
    option forwardfor
    # server nodes 
{# proxy between the hosts in the defined 'haproxy_proxy_group' #}
{% if haproxy_proxy_group is defined and haproxy_proxy_group in groups %}
{% for host in groups[haproxy_proxy_group] %}
    server node{{ loop.index }} {{ host }}:{{ haproxy_target_port }} check maxconn {{ haproxy_maxconn_local }}
{% endfor %}
{# if 'haproxy_proxy_group' is not defined, proxy between the hosts in the play #}
{% else %}
{% for node in play_hosts %}
{% if haproxy_local %}
    server node{{ loop.index }} 0.0.0.0:{{ haproxy_target_port }} check maxconn {{ haproxy_maxconn_local }}
{% else %}
    server node{{ loop.index }} {{ node }}:{{ haproxy_target_port }} check maxconn {{ haproxy_maxconn_local }}
{% endif %}
{% endfor %}
{% endif %}

listen stats *:1936
    stats enable
    stats uri /
    stats hide-version
    #stats auth admin:admin
